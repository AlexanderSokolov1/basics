<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>Title</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Trebuchet MS";
	panose-1:2 11 6 3 2 2 2 2 2 4;}
@font-face
	{font-family:"Arial Black";
	panose-1:2 11 10 4 2 1 2 2 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:"\@MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	line-height:12.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
h1
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.5in;
	text-indent:-.5in;
	line-height:normal;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial Black",sans-serif;
	color:#464547;
	text-transform:uppercase;
	font-weight:normal;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	text-indent:-.5in;
	line-height:normal;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial Black",sans-serif;
	color:#1A9CB0;
	text-transform:uppercase;
	font-weight:normal;}
h3
	{margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	text-indent:-.5in;
	line-height:normal;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial Black",sans-serif;
	color:#1A9CB0;
	font-weight:bold;}
h4
	{margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:53.85pt;
	text-indent:-53.85pt;
	line-height:normal;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Arial Black",sans-serif;
	color:#1A9CB0;
	font-weight:normal;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0in;
	margin-bottom:.0001pt;
	line-height:normal;
	font-size:10.0pt;
	font-family:"Trebuchet MS",sans-serif;
	color:#3B3838;
	text-transform:uppercase;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:10.0pt;
	margin-bottom:.0001pt;
	line-height:normal;
	font-size:10.0pt;
	font-family:"Trebuchet MS",sans-serif;
	color:#3B3838;
	text-transform:uppercase;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:20.0pt;
	margin-bottom:.0001pt;
	line-height:normal;
	font-size:10.0pt;
	font-family:"Trebuchet MS",sans-serif;
	color:#3B3838;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:15.0pt;
	margin-left:0in;
	line-height:normal;
	border:none;
	padding:0in;
	font-size:20.0pt;
	font-family:"Arial Black",sans-serif;
	color:#464547;
	text-transform:uppercase;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-link:"Body Text Char";
	margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:normal;
	font-size:10.0pt;
	font-family:"Trebuchet MS",sans-serif;
	color:#464547;}
a:link, span.MsoHyperlink
	{font-family:"Trebuchet MS",sans-serif;
	color:#1A9CB0;
	text-decoration:underline;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:normal;
	font-size:14.0pt;
	font-family:"Arial Black",sans-serif;
	color:#464547;
	text-transform:uppercase;
	font-weight:bold;}
span.BodyTextChar
	{mso-style-name:"Body Text Char";
	mso-style-link:"Body Text";
	font-family:"Trebuchet MS",sans-serif;
	color:#464547;}
p.ProjectName, li.ProjectName, div.ProjectName
	{mso-style-name:ProjectName;
	mso-style-link:"ProjectName Char";
	margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:normal;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Arial Black",sans-serif;
	color:#464547;}
span.ProjectNameChar
	{mso-style-name:"ProjectName Char";
	mso-style-link:ProjectName;
	font-family:"Arial Black",sans-serif;
	color:#464547;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Arial Black",sans-serif;
	color:#1A9CB0;
	text-transform:uppercase;}
p.Code, li.Code, div.Code
	{mso-style-name:Code;
	mso-style-link:"Code Char";
	margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:normal;
	background:#E0E0E0;
	font-size:10.0pt;
	font-family:"Courier New";
	color:#464547;}
span.CodeChar
	{mso-style-name:"Code Char";
	mso-style-link:Code;
	font-family:"Courier New";
	color:#464547;
	background:#E0E0E0;}
.MsoChpDefault
	{font-size:10.0pt;}
 /* Page Definitions */
 @page WordSection1
	{size:595.45pt 841.7pt;
	margin:56.7pt 42.55pt 56.7pt 56.7pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<link rel="stylesheet" href="../../styles/main.css" />
<script src="../../scripts/main.js" ></script>
</head>

<body lang=RU link="#1A9CB0" vlink="#954F72">

<div class=WordSection1>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText>

<table cellpadding=0 cellspacing=0 align=left>
 <tr>
  <td width=8 height=177></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=96 height=34 src="lecture_files/image001.png"></td>
 </tr>
</table>

<span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<br clear=ALL>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0
 style='border-collapse:collapse'>
 <tr style='height:79.15pt'>
  <td width=624 valign=top style='width:467.95pt;padding:0in 5.4pt 0in 5.4pt;
  height:79.15pt'>
  <div style='border:none;border-bottom:solid #A5A5A5 1.0pt;padding:0in 0in 1.0pt 0in'>
  <p class=MsoTitle align=center style='text-align:center'><a
  name="_Toc35205536">события в <span lang=EN-US>.NET</span></a></p>
  </div>
  </td>
 </tr>
 <tr>
  <td width=624 valign=top style='width:467.95pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=ProjectName><span lang=EN-US>&nbsp;</span></p>
  </td>
 </tr>
</table>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<span lang=EN-US style='font-size:10.0pt;font-family:"Times New Roman",serif'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:normal'><span lang=EN-US
style='font-family:"Trebuchet MS",sans-serif;color:#464547'>&nbsp;</span></p>

<p class=MsoTocHeading>Содержание</p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc35205536"><span lang=RU>события
в </span>.NET<span style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>1</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc35205537"><span lang=RU>1</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>Введение</span><span style='color:#3B3838;
display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc35205538"><span lang=RU>2</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>Работа с событиями</span><span
style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc35205539"><span lang=RU>2.1</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>Объявление события</span><span
style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc35205540">2.1.1<span
style='font-size:11.0pt;color:windowtext;text-decoration:none'>      </span><span
lang=RU>Безопасный вызов событий</span><span style='color:#3B3838;display:none;
text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc35205541"><span lang=RU>2.1.2</span><span
style='font-size:11.0pt;color:windowtext;text-decoration:none'>      </span><span
lang=RU>Модификаторы доступа и статичность события</span><span
style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc35205542"><span lang=RU>2.2</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>Объявление Обработчика события</span><span
style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc35205543"><span lang=RU>2.2.1</span><span
style='font-size:11.0pt;color:windowtext;text-decoration:none'>      </span><span
lang=RU>Объявление обработчика события</span><span style='color:#3B3838;
display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc35205544"><span lang=RU>2.2.2</span><span
style='font-size:11.0pt;color:windowtext;text-decoration:none'>      </span><span
lang=RU>Добавление и удаление обработчика события</span><span style='color:
#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc35205545"><span lang=RU>3</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>стандартный шаблон .</span>net<span lang=RU>
для событий</span><span style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc35205546"><span lang=RU>3.1</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>Применение делегата </span>EventHandler<span
lang=RU> и класса </span>EventArgs<span style='color:#3B3838;display:none;
text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc35205547"><span lang=RU>3.1.1</span><span
style='font-size:11.0pt;color:windowtext;text-decoration:none'>      </span><span
lang=RU>Передача аргументов события. Класс </span>EventArgs<span lang=RU>.</span><span
style='color:#3B3838;display:none;text-decoration:none'> </span><span
style='color:#3B3838;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc35205548"><span lang=RU>3.1.2</span><span
style='font-size:11.0pt;color:windowtext;text-decoration:none'>      </span><span
lang=RU>Использование делагата </span>EventHandler<span lang=RU> для объявления
события</span><span style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc35205549">4<span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>События </span>vs <span lang=RU>Делегаты</span><span
style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc35205550"><span lang=RU>4.1</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>зачем использовать события, если вместо их
можно использовать делегаты</span><span style='color:#3B3838;display:none;
text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc35205551"><span lang=RU>4.2</span><span
style='font-size:11.0pt;color:windowtext;text-transform:none;text-decoration:
none'>     </span><span lang=RU>Выбор между делегатом и событием</span><span
style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc35205552"><span lang=RU>Контрольные
вопросы</span><span style='color:#3B3838;display:none;text-decoration:none'>. </span><span
style='color:#3B3838;display:none;text-decoration:none'>11</span></a></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<span style='font-size:10.0pt;font-family:"Trebuchet MS",sans-serif;color:#464547'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:normal'><span style='font-family:"Trebuchet MS",sans-serif;
color:#464547'>&nbsp;</span></p>

<h1><a name="_Toc35205537">1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Введение</a></h1>

<p class=MsoBodyText style='text-align:justify'>Для начала давайте попробуем
разобраться с тем что же такое события. На самом деле события не несут никакого
скрытого смысла и понимать их можно в привычном контексте с аналогией в
реальной жизни. Представьте, что Вы сидите за рулем автомобиля перед красным
сигналом светофора. Красный свет меняется на желтый (это уже событие), затем на
зеленый (это тоже событие). </p>

<p class=MsoBodyText style='text-align:justify'>В языке программирования C# все
абсолютно идентично. С точки зрения программы, событием называют сообщение,
посланное объектом чтобы проинформировать о совершении некоторого действия. Это
действие может быть вызвано взаимодействием с пользователем, например при
нажатии кнопки, или быть результатом некоторой логики программы, например,
изменение значения свойства. Класс, содержащий описание события называется
издателем (Publisher). Объект такого класса уведомляет другие объекты
подписавшиеся на событие, о том что это событие произошло. Реакция на событие
осуществляется с помощью так называемых обработчиков события. Обработчик
события – это обычный метод, который выполняет некоторые действия в программе,
в случае если состоялось (сгенерировалось) событие. Подписчик (Subscriber) это
объект, который предоставляет обработчики событий. События позволяют издателю
(Publisher) уведомлять подписчиков (Subscribers) о возникновении каких-либо
ситуаций.</p>

<p class=MsoBodyText style='text-align:justify'>События работают в объединении
с делегатами. Такое объединение позволяет формировать списки (цепочки)
обработчиков события (методов), которые должны вызваться при вызове (запуске,
генерировании) данного события. Такой подход эффективен при написании больших
программных систем, поскольку он позволяет упорядочить большой сложный
программный код в котором очень легко допустить логическую ошибку.</p>

<p class=MsoBodyText style='text-align:justify'>И так кратко:</p>

<p class=MsoBodyText style='margin-left:.5in;text-align:justify;text-indent:
-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Класс издатель определяет в какой момент будет вызвано его
событие. Подписчики определяют ответное действие, которое будет выполнено по
наступлению события издателя.</p>

<p class=MsoBodyText style='margin-left:.5in;text-align:justify;text-indent:
-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>На событие может подписаться несколько подписчиков. Подписчик
может обрабатывать несколько событий от нескольких издателей.</p>

<p class=MsoBodyText style='margin-left:.5in;text-align:justify;text-indent:
-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Если у события несколько подписчиков, то при его возникновении
происходит синхронный вызов обработчиков событий.</p>

<p class=MsoBodyText style='margin-left:.5in;text-align:justify;text-indent:
-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Для типа делегата, определяемого для события, тип возвращаемого
значения должен быть void.</p>

<p class=MsoBodyText style='margin-left:.5in;text-align:justify;text-indent:
-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>События основаны на делегатах. Делегаты поддерживают
многоадресную рассылку, это обеспечивает поддержку нескольких подписчиков для
любого источника событий.</p>

<p class=MsoBodyText style='text-align:justify'>&nbsp;</p>

<p class=MsoBodyText style='text-align:justify'>События представляют собой
специальный вид многоадресного делегата, который можно вызвать только из класса
или структуры, в которых он объявлен (класс Publisher). Если другие классы или
структуры подписываются на событие, их методы обработчиков событий будут
вызываться, когда класс Publisher будет вызывать событие.</p>

<p class=MsoBodyText><span lang=EN-US><a
href="https://docs.microsoft.com/ru-ru/dotnet/standard/events/"><span lang=RU>https://docs.microsoft.com/ru-ru/dotnet/standard/events/</span></a></span></p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<h1><a name="_Toc35205538">2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Работа с событиями</a></h1>

<h2><a name="_Toc35205539">2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Объявление события</a></h2>

<p class=MsoBodyText style='text-align:justify'>События объявляются в классе с
помощью ключевого слова event, после которого указывается тип делегата, который
представляет событие: </p>

<p class=MsoBodyText><b>[&lt;спецификатор&gt;] event &lt;делегат&gt; &lt;имя
события&gt;;</b></p>

<p class=MsoBodyText style='text-align:justify'>Для примера добавим класс
издателя события - <span lang=EN-US>Worker</span>, который подразумеваем будет
выполнять некоторую работу, по окончанию выполнения которой будет генерировать
событие <span lang=EN-US>Completed</span>, передавая вместе с ним информацию о
количестве выполненной работы и дате её выполнения.</p>

<p class=MsoBodyText style='text-align:justify'>Для реализации этого примера
создадим делегат <span lang=EN-US>WorkerHandler</span><span lang=EN-US> </span>принимающий
два аргумента: количество выполненной работы и время выполнения. Возвращаемый
тип у делегата – <span lang=EN-US>void</span>. Это основное требование к типу
делегата, так как событие обрабатывает список обработчиков.</p>

<p class=MsoBodyText style='text-align:justify'>Далее в классе <span
lang=EN-US>Worker</span><span lang=EN-US> </span>создаём публичное событие <span
lang=EN-US>Completed</span><span lang=EN-US> </span>с типом <span lang=EN-US>WorkerHandler</span>
и внутренне свойство класса, которое в будущем будет содержать количество
выполненной работы.</p>

<p class=MsoBodyText><b>&nbsp;</b></p>

<p class=Code><span lang=EN-US style='color:blue'>delegate</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>void</span><span
lang=EN-US> </span><span lang=EN-US style='color:#2B91AF'>WorkerHandler</span><span
lang=EN-US>(</span><span lang=EN-US style='color:blue'>int</span><span
lang=EN-US> amountWork, DateTime completedDate);</span></p>

<p class=Code><span lang=EN-US style='color:blue'>class</span><span lang=EN-US>
</span><span lang=EN-US style='color:#2B91AF'>Worker</span></p>

<p class=Code><span lang=EN-US>{</span></p>

<p class=Code><span lang=EN-US>      </span><span lang=EN-US style='color:blue'>int</span><span
lang=EN-US> AmountWork { </span><span lang=EN-US style='color:blue'>get</span><span
lang=EN-US>; </span><span lang=EN-US style='color:blue'>set</span><span
lang=EN-US>; }</span></p>

<p class=Code><span lang=EN-US>      </span><span lang=EN-US style='color:blue'>public</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>event</span><span
lang=EN-US> </span><span lang=EN-US style='color:#2B91AF'>WorkerHandler</span><span
lang=EN-US style='color:#2B91AF'> </span><span lang=EN-US>Completed</span>;</p>

<p class=Code>}</p>

<p class=MsoBodyText style='text-align:justify'>Для генерации события и вызова
подписавшихся на него обработчиков необходимо добавить отдельный метод с
названием <span lang=EN-US>OnCompleted</span>. Рекомендуется использовать
именно такой шаблон именования данного метода: <b>приставка </b><b><span
lang=EN-US>On</span></b><b> + название события</b>. Метод также рекомендуют
обозначать как <span lang=EN-US>virtual</span><span lang=EN-US> </span>для
возможности переопределения в дочерних классах, вместе с модификатором <span
lang=EN-US>protected</span>.</p>

<p class=MsoBodyText style='text-align:justify'>В результате в класс будет
добавлен следующий код:</p>

<p class=Code><span lang=EN-US style='color:#0000FE'>protected virtual void </span><span
lang=EN-US style='color:black'>OnCompleted()</span></p>

<p class=Code><span lang=EN-US style='color:black'>{</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US style='color:#2B91AF'>WorkerHandler</span><span lang=EN-US
style='color:black'> handler = Completed;</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US>if</span><span lang=EN-US style='color:black'> (handler != </span><span
lang=EN-US>null</span><span lang=EN-US style='color:black'>)</span></p>

<p class=Code><span lang=EN-US style='color:black'>      {</span></p>

<p class=Code><span lang=EN-US style='color:black'>            handler(</span><span
lang=EN-US>this</span><span lang=EN-US style='color:black'>.AmountWork, </span><span
lang=EN-US style='color:#2B91AF'>DateTime</span><span lang=EN-US
style='color:black'>.Now);</span></p>

<p class=Code><span lang=EN-US style='color:black'>      }</span></p>

<p class=Code><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<h3><a name="_Toc35205540"><span lang=EN-US style='font-weight:normal'>2.1.1<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Безопасный вызов
событий</a></h3>

<p class=MsoBodyText style='text-align:justify'>В коде метода <span lang=EN-US>OnCompleted</span><span
lang=EN-US> </span>следует внимательно обратить на строку где проверяется на <span
lang=EN-US>null</span><span lang=EN-US> </span>сам <span lang=EN-US>handler</span>.
Этим мы проверяем наличие методов обратчиков от подписчиков на данное событие.
В случае если обработчики отсутствуют, переменная <span lang=EN-US>handler</span><span
lang=EN-US> </span>будет содержать <span lang=EN-US>null</span>.</p>

<p class=MsoBodyText style='text-align:justify'>Существует два способа записи
кода, для выполнения данной проверки:</p>

<p class=Code style='margin-bottom:0in;margin-bottom:.0001pt'><span lang=EN-US>//
Способ №1</span></p>

<p class=Code style='margin-bottom:0in;margin-bottom:.0001pt'><span lang=EN-US
style='color:blue'>if</span><span lang=EN-US style='color:black'> (handler != </span><span
lang=EN-US style='color:blue'>null</span><span lang=EN-US style='color:black'>)</span></p>

<p class=Code style='margin-bottom:0in;margin-bottom:.0001pt'><span lang=EN-US
style='color:black'>{</span></p>

<p class=Code style='margin-bottom:0in;margin-bottom:.0001pt'><span lang=EN-US
style='color:black'>      handler(</span><span lang=EN-US style='color:blue'>this</span><span
lang=EN-US style='color:black'>.AmountWork, DateTime.Now);</span></p>

<p class=Code style='margin-bottom:0in;margin-bottom:.0001pt'><span lang=EN-US
style='color:black'>}</span></p>

<p class=Code style='margin-bottom:0in;margin-bottom:.0001pt'><span lang=EN-US>//
Способ №2</span></p>

<p class=Code style='margin-bottom:0in;margin-bottom:.0001pt'><span lang=EN-US
style='color:black'>handler?.Invoke(</span><span lang=EN-US style='color:blue'>this</span><span
lang=EN-US style='color:black'>.AmountWork, DateTime.Now);</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc35205541"><span style='font-weight:normal'>2.1.2<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Модификаторы доступа
и статичность события</a></h3>

<p class=MsoBodyText style='text-align:justify'>Событие может быть объявлено
как статическое событие с помощью ключевого слова static. Это делает событие
доступным для вызывающих объектов в любое время, даже если экземпляр класса не
существует.</p>

<p class=MsoBodyText style='text-align:justify'>Событие может быть помечено как
виртуальное событие с помощью ключевого слова virtual. Это позволяет
производным классам переопределять поведение события с помощью ключевого слова
override. Событие, переопределяющее виртуальное событие, также может быть
запечатанным (sealed), что указывает, что для производных классов оно больше не
является виртуальным. И наконец, можно объявить событие абстрактным (abstract),
что означает, что компилятор не будет создавать блоки доступа к событиям add и
remove.</p>

<p class=MsoBodyText style='text-align:justify'>Событие можно объявлять в
интерфейсе.</p>

<p class=MsoBodyText><span lang=EN-US><a
href="https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/keywords/event"><span
lang=RU>https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/keywords/event</span></a></span>
</p>

<p class=MsoBodyText>&nbsp;</p>

<h2><a name="_Toc35205542">2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Объявление Обработчика события</a></h2>

<h3><a name="_Toc35205543"><span style='font-weight:normal'>2.2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Объявление
обработчика события</a></h3>

<p class=MsoBodyText style='text-align:justify'>Обработчики событий - это
именно то, что выполняется при вызове событий. Нередко в качестве обработчиков
событий применяются методы. Каждый обработчик событий по списку параметров и
возвращаемому типу должен соответствовать делегату, который представляет
событие.</p>

<p class=MsoBodyText style='text-align:justify'>Пример создания класса с
методом обработчика:</p>

<p class=Code><span lang=EN-US style='color:blue'>class</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:#2B91AF'>Manager</span></p>

<p class=Code><span lang=EN-US style='color:black'>{</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US style='color:blue'>public</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>void</span><span lang=EN-US
style='color:black'> WorkCompleted(</span><span lang=EN-US style='color:blue'>int</span><span
lang=EN-US style='color:black'> amountWork, </span><span lang=EN-US
style='color:#2B91AF'>DateTime </span><span lang=EN-US style='color:black'>completedDate)</span></p>

<p class=Code><span lang=EN-US style='color:black'>      {</span></p>

<p class=Code><span lang=EN-US style='color:black'>            Console.WriteLine(</span><span
lang=EN-US style='color:#A31515'>&quot;Work completed.&quot;</span><span
lang=EN-US style='color:black'> +</span></p>

<p class=Code><span lang=EN-US style='color:black'>                  </span><span
lang=EN-US style='color:#A31515'>$&quot;Amount work: </span><span lang=EN-US
style='color:black'>{amountWork}</span><span lang=EN-US style='color:#A31515'>.
Date: </span><span lang=EN-US style='color:black'>{completedDate.Date}</span><span
lang=EN-US style='color:#A31515'>&quot;</span><span lang=EN-US
style='color:black'>);</span></p>

<p class=Code><span lang=EN-US style='color:black'>      }</span></p>

<p class=Code><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoBodyText style='text-align:justify'>Сигнатура объявленного метода <span
lang=EN-US>WorkCompleted </span>соответствует типу делегата <span lang=EN-US>WorkerHandler
</span>приведённого ранее<span lang=EN-US>.</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc35205544"><span style='font-weight:normal'>2.2.2<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Добавление и удаление
обработчика события</a></h3>

<p class=MsoBodyText style='text-align:justify'>Для добавления обработчика
события применяется операция +=. Для одного события можно установить несколько
обработчиков и потом в любой момент времени их удалить. Для удаления
обработчиков применяется операция -=.</p>

<p class=MsoBodyText style='text-align:justify'>&nbsp;</p>

<p class=MsoBodyText style='text-align:justify'>В простейшем случае, это
выглядит следующим образом:</p>

<p class=Code><span lang=EN-US style='color:blue'>var</span><span lang=EN-US>
worker = </span><span lang=EN-US style='color:blue'>new</span><span lang=EN-US>
</span><span lang=EN-US style='color:#2B91AF'>Worker</span><span lang=EN-US>();</span></p>

<p class=Code><span lang=EN-US style='color:blue'>var</span><span lang=EN-US>
manager = </span><span lang=EN-US style='color:blue'>new</span><span
lang=EN-US> </span><span lang=EN-US style='color:#2B91AF'>Manager</span><span
lang=EN-US>();</span></p>

<p class=Code><span lang=EN-US>&nbsp;</span></p>

<p class=Code><span lang=EN-US style='color:green'>// </span><span
style='color:green'>Подписались</span><span style='color:green'> </span><span
style='color:green'>на</span><span style='color:green'> </span><span
style='color:green'>событие</span></p>

<p class=Code><span lang=EN-US>worker.Completed += manager.WorkCompleted;</span></p>

<p class=Code><span lang=EN-US>&nbsp;</span></p>

<p class=Code><span lang=EN-US style='color:green'>// </span><span
style='color:green'>Отписались</span><span style='color:green'> </span><span
style='color:green'>от</span><span style='color:green'> </span><span
style='color:green'>события</span></p>

<p class=Code><span lang=EN-US>worker.Completed -= manager.WorkCompleted;</span></p>

<p class=MsoBodyText style='text-align:justify'>В качестве обработчиков могут
использоваться не только обычные методы, но также делегаты, анонимные методы и
лямбда-выражения.</p>

<p class=MsoBodyText style='text-align:justify'>Пример добавления обработчика
представленного ввиде лямбда-выражения:</p>

<p class=Code><span lang=EN-US>worker.Completed += (amountWork, dateComleted)
=&gt;</span></p>

<p class=Code><span lang=EN-US>{</span></p>

<p class=Code><span lang=EN-US>      Console.WriteLine(</span><span lang=EN-US
style='color:#A31515'>&quot;Work completed!&quot;</span><span lang=EN-US>);</span></p>

<p class=Code><span lang=EN-US>};</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc35205545">3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>стандартный шаблон .<span lang=EN-US>net</span></a><span lang=EN-US> </span>для
событий</h1>

<h2><a name="_Toc35205546">3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Применение делегата <span lang=EN-US>EventHandler</span></a><span
lang=EN-US> </span>и класса <span lang=EN-US>EventArgs</span></h2>

<p class=MsoBodyText style='text-align:justify'>Теоритически для объявления
события можно использовать любой делегат. Но согласно стандартному шаблону
определенного .NET Framework нужно использовать один из специально
предопределенных делегатов EventHandler предназначенных именно для событий.</p>

<p class=MsoBodyText style='text-align:justify'><b><span lang=EN-US>public
delegate void EventHandler(object sender, EventArgs e);</span></b></p>

<p class=MsoBodyText style='text-align:justify'><b><span lang=EN-US>public
delegate void EventHandler&lt;T&gt;(object sender, T e);</span></b></p>

<p class=MsoBodyText style='text-align:justify'>Этот шаблон определили с целью
обеспечения согласованности кода .<span lang=EN-US>NET</span><span lang=EN-US> </span><span
lang=EN-US>Framework</span><span lang=EN-US> </span>и пользовательского кода.</p>

<p class=MsoBodyText style='text-align:justify'>Стандартный делегат для событий
содержит два аргумента: sender – отправитель события, e – аргументы события.
Для аргумента sender по соглашению следует использовать тип System.Object, даже
если вероятно вам известен более точный производный тип. Вторым аргументом
является тип производный от System.EventArgs, в котором можно указать
необходимые параметры события, которыми могут воспользоваться подписчики
события при вызове обработчика на своей стороне.</p>

<h3><a name="_Toc35205547"><span style='font-weight:normal'>3.1.1<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Передача аргументов
события. Класс <span lang=EN-US>EventArgs</span></a>.</h3>

<p class=MsoBodyText style='text-align:justify'>Данные, связанные с событием,
могут быть предоставлены с помощью класса данных события. .NET предоставляет
множество классов данных событий, которые можно использовать в приложениях.
Если требуется создать пользовательский класс данных события, создайте класс,
производный от класса EventArgs, а затем укажите все члены, необходимые для
передачи данных, связанных с событием.</p>

<p class=MsoBodyText style='text-align:justify'>Используя пример в предыдущих
главах, класс аргументов события будет выглядеть следующим образом:</p>

<p class=Code><span lang=EN-US style='color:blue'>class</span><span lang=EN-US
style='color:black'> </span><span lang=EN-US style='color:#2B91AF'>WorkInfoEventArgs
</span><span lang=EN-US style='color:black'>: </span><span lang=EN-US
style='color:#2B91AF'>EventArgs</span></p>

<p class=Code><span lang=EN-US style='color:black'>{</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US style='color:blue'>public</span><span lang=EN-US style='color:black'>
</span><span lang=EN-US style='color:blue'>int</span><span lang=EN-US
style='color:black'> AmountWork { </span><span lang=EN-US style='color:blue'>get</span><span
lang=EN-US style='color:black'>; }</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US style='color:blue'>public</span><span lang=EN-US style='color:black'>
DateTime CompletedDate { </span><span lang=EN-US style='color:blue'>get</span><span
lang=EN-US style='color:black'>; }</span></p>

<p class=Code><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US style='color:blue'>public</span><span lang=EN-US style='color:black'>
WorkInfoEventArgs(</span><span lang=EN-US style='color:blue'>int</span><span
lang=EN-US style='color:black'> amountWork, </span><span lang=EN-US
style='color:#2B91AF'>DateTime </span><span lang=EN-US style='color:black'>completedDate)</span></p>

<p class=Code><span lang=EN-US style='color:black'>      {</span></p>

<p class=Code><span lang=EN-US style='color:black'>            AmountWork =
amountWork;</span></p>

<p class=Code><span lang=EN-US style='color:black'>            CompletedDate =
completedDate;</span></p>

<p class=Code><span lang=EN-US style='color:black'>      }</span></p>

<p class=Code><span lang=EN-US style='color:black'>}</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText style='text-align:justify'>В большинстве случаев следует использовать
схему именования<span lang=EN-US> .NET </span>и завершать имя класса данных события
ключевым словом <b><span lang=EN-US>EventArgs</span></b><span lang=EN-US>. </span>Именуется
класс осмысленно в соответствии с содержащейся в нем информацией (а не
событием, для которого он будет использоваться).</p>

<p class=MsoBodyText style='text-align:justify'><b>System.EventArgs</b> –
предопределенный класс, имеющий только статическое свойство Empty.
EventArgs.Empty.</p>

<p class=MsoBodyText style='text-align:justify'>Также рекомендуется делать
свойства в типе аргумента события неизменяемыми (только для чтения). Таким
образом, один подписчик не сможет изменить значения до того, как их увидит
другой подписчик.</p>

<p class=MsoBodyText>&nbsp;</p>

<h3><a name="_Toc35205548"><span style='font-weight:normal'>3.1.2<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Использование
делагата <span lang=EN-US>EventHandler</span></a><span lang=EN-US> </span>для
объявления события</h3>

<p class=MsoBodyText style='text-align:justify'>Пример ранее приведенного
класса <span lang=EN-US>Worker</span>, используя стандартный делегат <span
lang=EN-US>EventHandler</span>.</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=Code><span lang=EN-US style='color:#0000FE'>public </span><span
lang=EN-US style='color:blue'>class</span><span lang=EN-US> </span><span
lang=EN-US style='color:#2B91AF'>Worker</span></p>

<p class=Code><span lang=EN-US>{</span></p>

<p class=Code><span lang=EN-US>      </span><span lang=EN-US style='color:blue'>int</span><span
lang=EN-US> AmountWork { </span><span lang=EN-US style='color:blue'>get</span><span
lang=EN-US>; </span><span lang=EN-US style='color:blue'>set</span><span
lang=EN-US>; }</span></p>

<p class=Code><span lang=EN-US>      </span><span lang=EN-US style='color:blue'>public</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>event</span><span
lang=EN-US> </span><span lang=EN-US style='color:#2B91AF'>EventHandler</span><span
lang=EN-US>&lt;</span><span lang=EN-US style='color:#2B91AF'>WorkInfoEventArgs</span><span
lang=EN-US>&gt; Completed;</span></p>

<p class=Code><span lang=EN-US>&nbsp;</span></p>

<p class=Code><span lang=EN-US>      </span><span lang=EN-US style='color:blue'>protected</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>virtual</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>void</span><span
lang=EN-US> OnCompleted()</span></p>

<p class=Code><span lang=EN-US>      {</span></p>

<p class=Code><span lang=EN-US>            </span><span lang=EN-US
style='color:#2B91AF'>EventHandler</span><span lang=EN-US>&lt;</span><span
lang=EN-US style='color:#2B91AF'>WorkInfoEventArgs</span><span lang=EN-US>&gt;
handler = Completed;</span></p>

<p class=Code><span lang=EN-US>            </span><span lang=EN-US
style='color:blue'>var</span><span lang=EN-US> args = </span><span lang=EN-US
style='color:blue'>new</span><span lang=EN-US> </span><span lang=EN-US
style='color:#2B91AF'>WorkInfoEventArgs</span><span lang=EN-US>(</span><span
lang=EN-US style='color:blue'>this</span><span lang=EN-US>.AmountWork,
DateTime.Now);</span></p>

<p class=Code><span lang=EN-US>            handler?.Invoke(</span><span
lang=EN-US style='color:blue'>this</span><span lang=EN-US>, args);</span></p>

<p class=Code><span lang=EN-US>      }</span></p>

<p class=Code><span lang=EN-US>&nbsp;</span></p>

<p class=Code><span lang=EN-US>      </span><span lang=EN-US style='color:blue'>public</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>void</span><span
lang=EN-US> DoWork()</span></p>

<p class=Code><span lang=EN-US>      {</span></p>

<p class=Code><span lang=EN-US>            Console.WriteLine(</span><span
lang=EN-US style='color:#A31515'>&quot;Making some work...&quot;</span><span
lang=EN-US>);</span></p>

<p class=Code><span lang=EN-US>            AmountWork = 6;</span></p>

<p class=Code><span lang=EN-US>&nbsp;</span></p>

<p class=Code><span lang=EN-US>            Console.WriteLine(</span><span
lang=EN-US style='color:#A31515'>&quot;Work completed&quot;</span><span
lang=EN-US>);</span></p>

<p class=Code><span lang=EN-US>            </span><span style='color:green'>// Вызов
события завершения работы.</span></p>

<p class=Code>            <span lang=EN-US>OnCompleted</span>();</p>

<p class=Code>      }</p>

<p class=Code>}</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText style='text-align:justify'>В примере была использована <span
lang=EN-US>generic</span><span lang=EN-US> </span>версия делегата <span
lang=EN-US>EventHandler</span>&lt;<span lang=EN-US>T</span>&gt; с параметром
класса <span lang=EN-US>WorkInfoEventArgs</span>, который представлен в
предыдущей главе.</p>

<p class=MsoBodyText style='text-align:justify'>Перед вызовом события,
создаётся экземпляр класса <span lang=EN-US>WorkInfoEventArgs</span> с данными
о событии для передачи вторым аргументом в методе <span lang=EN-US>Invoke</span>.</p>

<p class=MsoBodyText style='text-align:justify'>В случае если тип события не
требует дополнительных аргументов, необходимо предоставить оба аргумента для
делегата. Существует специальное значение EventArgs.Empty, которое следует
использовать для обозначения что событие не содержит никаких дополнительных
сведений. В таком случае событие должно быть представлено делегатом <span
lang=EN-US>EventHandler</span><span lang=EN-US> </span>параметризированный
стандартным классом <span lang=EN-US>EventArgs</span>.</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=Code><span lang=EN-US style='color:#0000FE'>public class </span><span
lang=EN-US style='color:#2B91AF'>Worker</span></p>

<p class=Code><span lang=EN-US style='color:black'>{</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US style='color:#0000FE'>public event </span><span lang=EN-US
style='color:#2B91AF'>EventHandler</span><span lang=EN-US style='color:black'>&lt;</span><span
lang=EN-US style='color:#2B91AF'>EventArgs</span><span lang=EN-US
style='color:black'>&gt; Completed;</span></p>

<p class=Code><span lang=EN-US style='color:black'>&nbsp;</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
lang=EN-US style='color:#0000FE'>protected virtual void </span><span
lang=EN-US style='color:black'>OnCompleted()</span></p>

<p class=Code><span lang=EN-US style='color:black'>      {</span></p>

<p class=Code><span lang=EN-US style='color:black'>            </span><span
lang=EN-US style='color:#2B91AF'>EventHandler</span><span lang=EN-US
style='color:black'>&lt;</span><span lang=EN-US style='color:#2B91AF'>EventArgs</span><span
lang=EN-US style='color:black'>&gt; handler = Completed;</span></p>

<p class=Code><span lang=EN-US style='color:black'>            handler?.Invoke(</span><span
lang=EN-US>this</span><span lang=EN-US style='color:black'>, </span><span
lang=EN-US style='color:#2B91AF'>EventArgs</span><span lang=EN-US
style='color:black'>.Empty);</span></p>

<p class=Code><span lang=EN-US style='color:black'>      </span><span
style='color:black'>}</span></p>

<p class=Code><span style='color:black'>      </span><span style='color:green'>//
.. </span><span lang=EN-US style='color:green'>other</span><span lang=EN-US
style='color:green'> </span><span lang=EN-US style='color:green'>code</span></p>

<p class=Code><span style='color:black'>}</span></p>

<p class=MsoNormal style='line-height:normal'>&nbsp;</p>

<p class=MsoBodyText style='text-align:justify'>Класс <span lang=EN-US>Manager</span><span
lang=EN-US> </span>с объявлением обработчика на событие <span lang=EN-US>Completed</span><span
lang=EN-US> </span>будет выглядеть следующим образом:</p>

<p class=MsoNormal style='line-height:normal'>&nbsp;</p>

<p class=Code><span lang=EN-US style='color:blue'>public</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>class</span><span
lang=EN-US> </span><span lang=EN-US style='color:#2B91AF'>Manager</span></p>

<p class=Code><span lang=EN-US>{</span></p>

<p class=Code><span lang=EN-US>      </span><span lang=EN-US style='color:blue'>public</span><span
lang=EN-US> </span><span lang=EN-US style='color:blue'>void</span><span
lang=EN-US> WorkCompleted(</span><span lang=EN-US style='color:blue'>object</span><span
lang=EN-US> sender, </span><span lang=EN-US style='color:#2B91AF'>WorkInfoEventArgs
</span><span lang=EN-US>args)</span></p>

<p class=Code><span lang=EN-US>      {</span></p>

<p class=Code><span lang=EN-US>            Console.WriteLine(</span><span
lang=EN-US style='color:#A31515'>&quot;Work completed.&quot;</span><span
lang=EN-US> +</span></p>

<p class=Code><span lang=EN-US>                  </span><span lang=EN-US
style='color:#A31515'>$&quot;Amount work: </span><span lang=EN-US>{args.AmountWork}</span><span
lang=EN-US style='color:#A31515'>. Date:             </span><span lang=EN-US>{args.CompletedDate.Date}</span><span
lang=EN-US style='color:#A31515'>&quot;</span><span lang=EN-US>);</span></p>

<p class=Code><span lang=EN-US>      }</span></p>

<p class=Code><span lang=EN-US>}</span></p>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

<p class=MsoBodyText style='text-align:justify'>Метод <span lang=EN-US>WorkCompleted
</span>соответствует сигнатуре делегата <span lang=EN-US>EventHandler&lt;WorkInfoEventArgs&gt;.<br
clear=all style='page-break-before:always'>
</span></p>

<h1><a name="_Toc35205549"><span lang=EN-US>4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>События <span lang=EN-US>vs </span></a>Делегаты</h1>

<h2><a name="_Toc35205550">4.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>зачем использовать события, если вместо их можно использовать делегаты</a></h2>

<p class=MsoBodyText style='text-align:justify'>Основное назначение событий –
предотвращение влияния подписчиков друг на друга. Если в коде убрать ключевое
слово event, чтобы <span lang=EN-US>Comlpeted</span> (в классе <span
lang=EN-US>Worker</span>) стало обычным полем делегата, результаты будут теми
же самыми. Однако класс станет менее надежным, потому что подписчики смогут
предпринимать следующие действия, влияя друг на друга:</p>

<p class=MsoBodyText style='text-align:justify'>- заменять других подписчиков,
переустанавливая свойство (вместо операции +=)</p>

<p class=MsoBodyText style='text-align:justify'>- очищать всех подписчиков
(устанавливая поле в null)</p>

<p class=MsoBodyText style='text-align:justify'>- выполнять групповую рассылку
другим подписчикам путем вызова делегата.</p>

<p class=MsoBodyText style='text-align:justify'>&nbsp;</p>

<p class=MsoBodyText style='text-align:justify'>Пробежимся по отличию event'а в
классе от публичного поля делегатного типа.</p>

<p class=MsoBodyText style='text-align:justify'>Рассмотрим случай, когда event
реализован «по умолчанию», то есть, с неявным делегатным полем. Отличие состоит
в том, что для делегатного поля у вас полный доступ к нему. Вы можете — также и
снаружи класса! — разобрать MulticastDelegate на части и собрать новый, вы
можете заменить его на свой или присвоить ему null, вы можете его вызвать,
можете его скопировать себе в переменную. У вас есть полный доступ, как и к
любому публичному полю. (Это, разумеется, вопиющим образом нарушает
инкапсуляцию.)</p>

<p class=MsoBodyText style='text-align:justify'>Для event'а, вы можете лишь
написать instance.Event += handler и instance.Event -= handler, что
отображается на функции add и remove, которые в свою очередь снова-таки
вызывают += и -= для автоматически реализованного делегата. Никакого другого
доступа у вас нету. Внутри класса вы, однако, можете получить на чтение
значение этого делегата, используя имя event'а.</p>

<h3 style='margin-left:0in;text-indent:0in'>&nbsp;</h3>

<h2><a name="_Toc35205551">4.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Выбор между делегатом и событием</a></h2>

<p class=MsoBodyText style='text-align:justify'><span style='font-family:"Segoe UI",sans-serif;
color:#171717;background:white'>Часто возникает вопрос о том, что выбрать: структуру
на основе</span><span lang=EN-US style='font-family:"Segoe UI",sans-serif;
color:#171717;background:white'>&nbsp;</span><span lang=EN-US style='font-family:
Consolas;color:#171717;background:white'>delegates</span><span lang=EN-US
style='font-family:"Segoe UI",sans-serif;color:#171717;background:white'>&nbsp;</span><span
style='font-family:"Segoe UI",sans-serif;color:#171717;background:white'>или на
основе</span><span lang=EN-US style='font-family:"Segoe UI",sans-serif;
color:#171717;background:white'>&nbsp;</span><span lang=EN-US style='font-family:
Consolas;color:#171717;background:white'>events</span><span style='font-family:
"Segoe UI",sans-serif;color:#171717;background:white'>.</span><span lang=EN-US
style='font-family:"Segoe UI",sans-serif;color:#171717;background:white'>&nbsp;</span><span
style='font-family:"Segoe UI",sans-serif;color:#171717;background:white'>Это
сложный вопрос, так как эти две возможности языка очень похожи.</span><span
lang=EN-US style='font-family:"Segoe UI",sans-serif;color:#171717;background:
white'>&nbsp;</span><span style='font-family:"Segoe UI",sans-serif;color:#171717;
background:white'>Более того, события основаны на тех же средствах языка,
которые обеспечивают поддержку делегатов.</span></p>

<p class=MsoBodyText style='margin-left:.25in;text-align:justify;text-indent:
-.25in'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Важным
фактором является обяательность наличия подключенного подписчика. <span
style='font-family:"Segoe UI",sans-serif;color:#171717;background:white'>Если
ваш код должен вызывать код, предоставленный подписчиком, следует использовать
структуру на основе делегатов.</span><span lang=EN-US style='font-family:"Segoe UI",sans-serif;
color:#171717;background:white'>&nbsp;</span><span style='font-family:"Segoe UI",sans-serif;
color:#171717;background:white'>Если код может выполнить все задачи, не вызывая
подписчики, следует использовать структуру на основе событий.</span></p>

<p class=MsoBodyText style='margin-left:.25in;text-align:justify;text-indent:
-.25in'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span><span
style='font-family:"Segoe UI",sans-serif;color:#171717;background:white'>Еще
одним аспектом является прототип метода, который требуется для метода делегата.</span><span
lang=EN-US style='font-family:"Segoe UI",sans-serif;color:#171717;background:
white'>&nbsp;</span><span style='font-family:"Segoe UI",sans-serif;color:#171717;
background:white'>Как вы уже видели, все делегаты, используемые для событий,
имеют тип возвращаемого значения </span><span lang=EN-US style='font-family:
"Segoe UI",sans-serif;color:#171717;background:white'>void</span><span
style='font-family:"Segoe UI",sans-serif;color:#171717;background:white'>. В
случае если в методе нужно использовать возвращаемое значение, то предпочтение
скорее всего следует отдать обычным делегатам.</span></p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoNormal><span lang=EN-US><a
href="https://docs.microsoft.com/en-us/dotnet/csharp/distinguish-delegates-events"><span
style='font-family:"Trebuchet MS",sans-serif'>https</span><span lang=RU
style='font-family:"Trebuchet MS",sans-serif'>://</span><span style='font-family:
"Trebuchet MS",sans-serif'>docs</span><span lang=RU style='font-family:"Trebuchet MS",sans-serif'>.</span><span
style='font-family:"Trebuchet MS",sans-serif'>microsoft</span><span lang=RU
style='font-family:"Trebuchet MS",sans-serif'>.</span><span style='font-family:
"Trebuchet MS",sans-serif'>com</span><span lang=RU style='font-family:"Trebuchet MS",sans-serif'>/</span><span
style='font-family:"Trebuchet MS",sans-serif'>en</span><span lang=RU
style='font-family:"Trebuchet MS",sans-serif'>-</span><span style='font-family:
"Trebuchet MS",sans-serif'>us</span><span lang=RU style='font-family:"Trebuchet MS",sans-serif'>/</span><span
style='font-family:"Trebuchet MS",sans-serif'>dotnet</span><span lang=RU
style='font-family:"Trebuchet MS",sans-serif'>/</span><span style='font-family:
"Trebuchet MS",sans-serif'>csharp</span><span lang=RU style='font-family:"Trebuchet MS",sans-serif'>/</span><span
style='font-family:"Trebuchet MS",sans-serif'>distinguish</span><span lang=RU
style='font-family:"Trebuchet MS",sans-serif'>-</span><span style='font-family:
"Trebuchet MS",sans-serif'>delegates</span><span lang=RU style='font-family:
"Trebuchet MS",sans-serif'>-</span><span style='font-family:"Trebuchet MS",sans-serif'>events</span></a></span></p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<h3 style='margin-left:0in;text-indent:0in'><a name="_Toc35205552">Контрольные
вопросы</a></h3>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Что такое
событие?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Какие
предопределенные типы существуют в .<span lang=EN-US>Net</span><span
lang=EN-US> </span>для работы с событиями?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Какой
используется тип возвращаемого значения для делегата события?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Как вызывается
список обработчиков событий - синхронно или асинхронно?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Что необходимо
сделать перед непосредственным вызовом события?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Какое существует
требование к методу-обработчика для события?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Какие образом
можно подписаться/отписаться от события?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Назовите
аргументы метода описываемым стандартным делегатом <span lang=EN-US>EventHandler</span>
для событий? Для чего они предназначены?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span>Какие существуют
рекомендации создания класса для передачи аргументов событию?</p>

<p class=MsoBodyText style='margin-left:.25in;text-indent:-.25in'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>В чём состоит ключевая
особенность использования событий вместо обычных делегатов?</p>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoBodyText>&nbsp;</p>

<h3 style='margin-left:0in;text-indent:0in'>&nbsp;</h3>

<h3 style='margin-left:0in;text-indent:0in'>&nbsp;</h3>

<b><span style='font-size:12.0pt;font-family:"Arial Black",sans-serif;
color:#1A9CB0'><br clear=all style='page-break-before:always'>
</span></b>

<h3 style='margin-left:0in;text-indent:0in'>&nbsp;</h3>

<p class=MsoBodyText>&nbsp;</p>

<p class=MsoNormal style='line-height:normal'><span style='font-family:"Trebuchet MS",sans-serif;
color:#464547'>&nbsp;</span></p>

<table class=TableEPAM border=1 cellspacing=0 cellpadding=0 width="97%"
 style='width:97.74%;margin-left:5.4pt;border-collapse:collapse;border:none'>
 <thead>
  <tr>
   <td width="100%" colspan=6 style='width:100.0%;border:solid #767171 1.0pt;
   background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>REVISION HISTORY</span></b></p>
   </td>
  </tr>
  <tr>
   <td width="9%" rowspan=2 style='width:9.1%;border:solid #767171 1.0pt;
   border-top:none;background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Ver.</span></b></p>
   </td>
   <td width="25%" rowspan=2 style='width:25.1%;border-top:none;border-left:
   none;border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
   background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Description of
   Change</span></b></p>
   </td>
   <td width="17%" rowspan=2 style='width:17.4%;border-top:none;border-left:
   none;border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
   background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Author</span></b></p>
   </td>
   <td width="17%" rowspan=2 style='width:17.4%;border-top:none;border-left:
   none;border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
   background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Date</span></b></p>
   </td>
   <td width="31%" colspan=2 style='width:31.0%;border-top:none;border-left:
   none;border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
   background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Approved</span></b></p>
   </td>
  </tr>
  <tr>
   <td width="15%" style='width:15.16%;border-top:none;border-left:none;
   border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
   background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Name</span></b></p>
   </td>
   <td width="15%" style='width:15.86%;border-top:none;border-left:none;
   border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
   background:#D0CECE;padding:0in 5.4pt 0in 5.4pt'>
   <p class=MsoNormal align=center style='text-align:center'><b><span
   style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Effective Date</span></b></p>
   </td>
  </tr>
 </thead>
 <tr>
  <td width="9%" style='width:9.1%;border:solid #767171 1.0pt;border-top:none;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>0.1</span></p>
  </td>
  <td width="25%" style='width:25.1%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span lang=EN-US
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Initial version</span></p>
  </td>
  <td width="17%" style='width:17.4%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span lang=EN-US
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>Alexander Bakushin</span></p>
  </td>
  <td width="17%" style='width:17.4%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span lang=EN-US
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>24</span><span
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>-</span><span
  lang=EN-US style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>FEB</span><span
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>-</span><span
  lang=EN-US style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>2020</span></p>
  </td>
  <td width="15%" style='width:15.16%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="15%" style='width:15.86%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span lang=EN-US
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>24</span><span
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>-</span><span
  lang=EN-US style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>FEB</span><span
  style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>-</span><span
  lang=EN-US style='font-size:9.0pt;font-family:Consolas;color:#3B3838'>2020</span></p>
  </td>
 </tr>
 <tr>
  <td width="9%" style='width:9.1%;border:solid #767171 1.0pt;border-top:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:"Trebuchet MS",sans-serif;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="25%" style='width:25.1%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:"Trebuchet MS",sans-serif;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="17%" style='width:17.4%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:"Trebuchet MS",sans-serif;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="17%" style='width:17.4%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:"Trebuchet MS",sans-serif;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="15%" style='width:15.16%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:"Trebuchet MS",sans-serif;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="15%" style='width:15.86%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:"Trebuchet MS",sans-serif;color:#3B3838'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td width="9%" style='width:9.1%;border:solid #767171 1.0pt;border-top:none;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="25%" style='width:25.1%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="17%" style='width:17.4%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="17%" style='width:17.4%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="15%" style='width:15.16%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>&nbsp;</span></p>
  </td>
  <td width="15%" style='width:15.86%;border-top:none;border-left:none;
  border-bottom:solid #767171 1.0pt;border-right:solid #767171 1.0pt;
  background:white;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-top:6.0pt'><span style='font-size:9.0pt;
  font-family:Consolas;color:#3B3838'>&nbsp;</span></p>
  </td>
 </tr>
</table>

<p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p>

</div>

</body>

</html>
